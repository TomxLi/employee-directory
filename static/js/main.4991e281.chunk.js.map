{"version":3,"sources":["components/DataRow/index.js","components/DataTable/index.js","components/SearchBox/index.js","components/SearchArea/index.js","utils/API.js","components/DataArea/index.js","components/Main/index.js","components/Wrapper/index.js","components/Header/index.js","App.js","serviceWorker.js","index.js"],"names":["DataRow","users","formatDate","date","dateArray","split","year","join","undefined","name","map","login","picture","phone","email","dob","data-th","className","src","medium","alt","first","last","href","target","uuid","DataTable","headings","handleSort","id","width","console","log","style","onClick","toLowerCase","class","rel","SearchBox","handleSearchChange","type","placeholder","aria-label","onChange","e","SearchArea","axios","get","DataArea","state","order","filteredUsers","heading","setState","sortedUsers","sort","a","b","aFirtName","aLastName","bFirstName","bLastName","localeCompare","aFirstName","event","value","filter","filteredList","item","Object","values","indexOf","API","then","results","data","this","Component","Main","Wrapper","children","Header","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.4991e281.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction DataRow({ users }) {\r\n  function formatDate(date) {\r\n    const dateArray = date.split(\"-\");\r\n    const year = dateArray[0];\r\n    const month = dateArray[1];\r\n    const dayArray = dateArray[2].split(\"T\");\r\n    const day = dayArray[0];\r\n    const formattedDate = [month, day, year].join(\"-\");\r\n    return formattedDate;\r\n  }\r\n\r\n  return (\r\n    <tbody>\r\n      {users[0] !== undefined && users[0].name !== undefined ? (\r\n        users.map(({ login, name, picture, phone, email, dob }) => {\r\n          return (\r\n            <tr key={login.uuid}>\r\n              <td data-th=\"Image\" className=\"align-middle\">\r\n                <img\r\n                  src={picture.medium}\r\n                  alt={\"profile image for \" + name.first + \" \" + name.last}\r\n                  className=\"img-responsive\"\r\n                />\r\n              </td>\r\n              <td data-th=\"Name\" className=\"name-cell align-middle\">\r\n                {name.first} {name.last}\r\n              </td>\r\n              <td data-th=\"Phone\" className=\"align-middle\">\r\n                {phone}\r\n              </td>\r\n              <td data-th=\"Email\" className=\"align-middle\">\r\n                <a href={\"mailto:\" + email} target=\"__blank\">\r\n                  {email}\r\n                </a>\r\n              </td>\r\n              <td data-th=\"DOB\" className=\"align-middle\">\r\n                {formatDate(dob.date)}\r\n              </td>\r\n            </tr>\r\n          );\r\n        })\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </tbody>\r\n  );\r\n}\r\n\r\nexport default DataRow;\r\n","import React from \"react\";\r\nimport DataRow from \"../DataRow\";\r\n\r\nfunction DataTable({ headings, users, handleSort }) {\r\n  return (\r\n    <div className=\"datatable mt-5\">\r\n      <table\r\n        id=\"table\"\r\n        className=\"table table-striped table-hover table-condensed\"\r\n      >\r\n        <thead>\r\n          <tr>\r\n            {headings.map(({ name, width }) => {\r\n              if (name === \"Name\") {\r\n                console.log(name);\r\n                return (\r\n                  <th\r\n                    className=\"col\"\r\n                    key={name}\r\n                    style={{ width }}\r\n                    onClick={() => {\r\n                      handleSort(name.toLowerCase());\r\n                    }}\r\n                  >\r\n                    {name}\r\n                    <span className=\"pointer\" />\r\n                    <b></b> <i class=\"fa fa-fw fa-sort\"></i>\r\n                    <link href=\"//maxcdn.bootstrapcdn.com/font-awesome/4.1.0/css/font-awesome.min.css\" rel=\"stylesheet\"></link>\r\n                  </th>\r\n                );\r\n              } else {\r\n                return (\r\n                  <th\r\n                    className=\"col\"\r\n                    key={name}\r\n                    style={{ width }}\r\n                  >\r\n                    {name}\r\n                    <span className=\"pointer\" />\r\n                  </th>\r\n                );\r\n              }\r\n            })}\r\n          </tr>\r\n        </thead>\r\n\r\n        <DataRow users={users} />\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DataTable;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction SearchBox({ handleSearchChange }) {\r\n  return (\r\n    <div className=\"searchbox\">\r\n      <form className=\"form-inline\" >\r\n        <input\r\n          className=\"form-control\"\r\n          type=\"search\"\r\n          placeholder=\"Search By Name\"\r\n          aria-label=\"Search\"\r\n          onChange={(e) => handleSearchChange(e)}\r\n        />\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\nexport default SearchBox;","import React from \"react\";\r\nimport SearchBox from \"../SearchBox\";\r\nimport \"./style.css\";\r\n\r\n\r\nfunction SearchArea({ handleSearchChange }) {\r\n  return (\r\n    <nav className=\"navbar navbar-expand navbar-light bg-light\">\r\n      <div className=\"navbar-collapse row\" id=\"navbarNav\">\r\n        <SearchBox handleSearchChange={handleSearchChange} />\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\nexport default SearchArea;\r\n","import axios from \"axios\";\r\n\r\nexport default {\r\n  getUsers: function () {\r\n    return axios.get(\"https://randomuser.me/api/?results=100\");\r\n  },\r\n};","import React, { Component } from \"react\";\r\nimport DataTable from \"../DataTable\";\r\nimport SearchArea from \"../SearchArea\";\r\nimport API from \"../../utils/API\";\r\nimport \"./style.css\";\r\n\r\nexport default class DataArea extends Component {\r\n  state = {\r\n    users: [{}],\r\n    order: \"descend\",\r\n    filteredUsers: [{}],\r\n  };\r\n\r\n  headings = [\r\n    { name: \"Image\", width: \"10%\" },\r\n    { name: \"Name\", width: \"10%\" },\r\n    { name: \"Phone\", width: \"20%\" },\r\n    { name: \"Email\", width: \"20%\" },\r\n    { name: \"DOB\", width: \"10%\" },\r\n  ];\r\n\r\n  handleSort = (heading) => {\r\n    if (this.state.order === \"descend\") {\r\n      this.setState({\r\n        order: \"ascend\",\r\n      });\r\n    } else {\r\n      this.setState({\r\n        order: \"descend\",\r\n      });\r\n    }\r\n\r\n    const compareFnc = (a, b) => {\r\n      if (this.state.order === \"ascend\") {\r\n        // account for missing values\r\n        if (a[heading] === undefined) {\r\n          return 1;\r\n        } else if (b[heading] === undefined) {\r\n          return -1;\r\n        }\r\n        // sort by first name then last name      \r\n        const aFirtName = a[heading].first.toLowerCase();\r\n        const aLastName = a[heading].last.toLowerCase();\r\n        const bFirstName = b[heading].first.toLowerCase();\r\n        const bLastName = b[heading].last.toLowerCase();\r\n        //break tie when first name is same\r\n        if (aFirtName.localeCompare(bFirstName) === 0) {\r\n          return aLastName.localeCompare(bLastName);\r\n        }\r\n        return aFirtName.localeCompare(bFirstName);\r\n      } else {\r\n        // account for missing values\r\n        if (a[heading] === undefined) {\r\n          return 1;\r\n        } else if (b[heading] === undefined) {\r\n          return -1;\r\n        }\r\n        // sort by first name then last name\r\n        const aFirstName = a[heading].first.toLowerCase();\r\n        const aLastName = a[heading].last.toLowerCase();\r\n        const bFirstName = b[heading].first.toLowerCase();\r\n        const bLastName = b[heading].last.toLowerCase();\r\n        //break tie when first name is same\r\n        if (aFirstName.localeCompare(bFirstName) === 0) {\r\n          return bLastName.localeCompare(aLastName);\r\n        }\r\n        return bFirstName.localeCompare(aFirstName);\r\n      }\r\n    };\r\n    const sortedUsers = this.state.filteredUsers.sort(compareFnc);\r\n    this.setState({ filteredUsers: sortedUsers });\r\n  };\r\n\r\n  handleSearchChange = (event) => {\r\n    console.log(event.target.value);\r\n    const filter = event.target.value;\r\n    const filteredList = this.state.users.filter((item) => {\r\n      // merge data together, then see if user input is anywhere inside\r\n      let values = Object.values(item).join(\"\").toLowerCase();\r\n      return values.indexOf(filter.toLowerCase()) !== -1;\r\n    });\r\n    this.setState({ filteredUsers: filteredList });\r\n  };\r\n\r\n  componentDidMount() {\r\n    API.getUsers().then((results) => {\r\n      this.setState({\r\n        users: results.data.results,\r\n        filteredUsers: results.data.results,\r\n      });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <SearchArea handleSearchChange={this.handleSearchChange} />\r\n        <div className=\"data-area\">\r\n          <DataTable\r\n            headings={this.headings}\r\n            users={this.state.filteredUsers}\r\n            handleSort={this.handleSort}\r\n          />\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport DataArea from \"../DataArea\";\r\n\r\nexport default class Main extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <DataArea />\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nfunction Wrapper({ children }) {\r\n  return <div className=\"wrapper\">{children}</div>;\r\n}\r\n\r\nexport default Wrapper;\r\n","import React, { Component } from \"react\";\r\nimport \"./style.css\";\r\n\r\nexport default class Header extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"header\">\r\n        <h1>Employee Directory</h1>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\nimport \"./App.css\";\nimport Main from \"./components/Main\";\nimport Wrapper from \"./components/Wrapper\";\nimport Header from \"./components/Header\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Wrapper>\n        <Header />\n        <Main />\n      </Wrapper>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  // TODO: what is strict mode here\n  <React.StrictMode> \n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}